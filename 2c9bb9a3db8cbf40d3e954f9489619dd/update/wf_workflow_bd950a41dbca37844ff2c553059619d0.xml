<?xml version="1.0" encoding="UTF-8"?><record_update table="wf_workflow_version">
    <wf_workflow_version action="INSERT_OR_UPDATE">
        <active>true</active>
        <activity_stages>{"activities":{},"subflows":[],"stages":{},"ends":["7bd63e641b5be010e314c955624bcb81"]}</activity_stages>
        <after_business_rules>false</after_business_rules>
        <checked_out/>
        <checked_out_by/>
        <column_renderer display_value="Workflow-driven">a56213111b030100adca1e094f0713ac</column_renderer>
        <condition/>
        <condition_type/>
        <description/>
        <expected_sequences>37d6faa41b5be010e314c955624bcbf6,7bd63e641b5be010e314c955624bcb7e,b7d63e641b5be010e314c955624bcb80,f3d6faa41b5be010e314c955624bcbf7,7bd63e641b5be010e314c955624bcb81</expected_sequences>
        <expected_time>1970-01-01 14:00:00</expected_time>
        <expected_time_type/>
        <full_sequences>37d6faa41b5be010e314c955624bcbf6,7bd63e641b5be010e314c955624bcb7e,b7d63e641b5be010e314c955624bcb80,f3d6faa41b5be010e314c955624bcbf7,77d63e641b5be010e314c955624bcb82,7bd63e641b5be010e314c955624bcb81</full_sequences>
        <journal/>
        <max_activity_count>100</max_activity_count>
        <name>wf_getF5Certificates</name>
        <not_cacheable>false</not_cacheable>
        <on_cancel><![CDATA[// This script executes if the workflow is cancelled.// The global variable context_sys_id contains the sys_id of the cancelled workflow context.]]></on_cancel>
        <order>100</order>
        <pin_type>set_by_activity</pin_type>
        <published>true</published>
        <relative_duration display_value="2 business days by 4pm">3bf802c20a0a0b52008e2859cd8abcf2</relative_duration>
        <requires_ert>true</requires_ert>
        <run_multiple>false</run_multiple>
        <schedule/>
        <stage_field/>
        <stage_order>computed</stage_order>
        <start display_value="Begin">37d6faa41b5be010e314c955624bcbf6</start>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>b7d63e641b5be010e314c955624bcb7c</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:53</sys_updated_on>
        <table>x_unugr_certificat_f5_scan_log</table>
        <timezone/>
        <validated>false</validated>
        <workflow display_value="wf_getF5Certificates">bd950a41dbca37844ff2c553059619d0</workflow>
    </wf_workflow_version>
    <wf_workflow action="INSERT_OR_UPDATE">
        <access>public</access>
        <description/>
        <name>wf_getF5Certificates</name>
        <preview/>
        <sys_class_name>wf_workflow</sys_class_name>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2019-06-13 13:10:28</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>bd950a41dbca37844ff2c553059619d0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>wf_getF5Certificates</sys_name>
        <sys_overrides/>
        <sys_package display_value="Certificate Management" source="x_unugr_certificat">2c9bb9a3db8cbf40d3e954f9489619dd</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Certificate Management">2c9bb9a3db8cbf40d3e954f9489619dd</sys_scope>
        <sys_update_name>wf_workflow_bd950a41dbca37844ff2c553059619d0</sys_update_name>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2019-06-13 13:10:28</sys_updated_on>
        <table>x_unugr_certificat_f5_scan_log</table>
        <template>false</template>
        <vars/>
    </wf_workflow>
    <wf_activity action="INSERT_OR_UPDATE">
        <activity_definition display_value="Begin">c7a5e32c0a0a0b3a002377c24ed8ea76</activity_definition>
        <activity_definition_updated>false</activity_definition_updated>
        <databus_lookup_id>1</databus_lookup_id>
        <height/>
        <input/>
        <is_parent>false</is_parent>
        <name>Begin</name>
        <new_activity_definition/>
        <notes/>
        <out_of_date>false</out_of_date>
        <parent/>
        <pinned>false</pinned>
        <pinned_version/>
        <stage/>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>37d6faa41b5be010e314c955624bcbf6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <timeout>1970-01-01 00:00:00</timeout>
        <vars/>
        <width>80</width>
        <workflow_version display_value="14 Hours">b7d63e641b5be010e314c955624bcb7c</workflow_version>
        <x>20</x>
        <y>20</y>
    </wf_activity>
    <sys_variable_value action="delete_multiple" query="document_key=37d6faa41b5be010e314c955624bcbf6"/>
    <wf_condition action="INSERT_OR_UPDATE">
        <activity display_value="Begin">37d6faa41b5be010e314c955624bcbf6</activity>
        <condition>true</condition>
        <condition_default/>
        <condition_type>standard</condition_type>
        <else_flag>false</else_flag>
        <error>false</error>
        <event>false</event>
        <event_name/>
        <is_positive>true</is_positive>
        <name>Always</name>
        <order>0</order>
        <short_description/>
        <skip_during_generate>false</skip_during_generate>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>3fd6faa41b5be010e314c955624bcbf6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
    </wf_condition>
    <wf_activity action="INSERT_OR_UPDATE">
        <activity_definition display_value="End">c7a66f7d0a0a0b3a004544a6d2f14076</activity_definition>
        <activity_definition_updated>false</activity_definition_updated>
        <databus_lookup_id>2</databus_lookup_id>
        <height/>
        <input/>
        <is_parent>false</is_parent>
        <name>End</name>
        <new_activity_definition/>
        <notes/>
        <out_of_date>false</out_of_date>
        <parent/>
        <pinned>false</pinned>
        <pinned_version/>
        <stage/>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>7bd63e641b5be010e314c955624bcb81</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:45</sys_updated_on>
        <timeout>1970-01-01 00:00:00</timeout>
        <vars/>
        <width>80</width>
        <workflow_version display_value="14 Hours">b7d63e641b5be010e314c955624bcb7c</workflow_version>
        <x>1096</x>
        <y>499</y>
    </wf_activity>
    <sys_variable_value action="delete_multiple" query="document_key=7bd63e641b5be010e314c955624bcb81"/>
    <wf_activity action="INSERT_OR_UPDATE">
        <activity_definition display_value="cm_getF5CertificateInformation">469835b0db4a73844ff2c553059619cf</activity_definition>
        <activity_definition_updated>false</activity_definition_updated>
        <databus_lookup_id>4</databus_lookup_id>
        <height/>
        <input>{"f5Host":"${workflow.scratchpad.currentF5Host}","f5UserId":"${workflow.scratchpad.f5UserId}","f5UserPassword":"${workflow.scratchpad.f5UserPassword}","expiredDaysThreshold":"${workflow.scratchpad.ignoreExpiredDays}"}</input>
        <is_parent>false</is_parent>
        <name>getF5Certificates</name>
        <new_activity_definition/>
        <notes/>
        <out_of_date>false</out_of_date>
        <parent/>
        <pinned>false</pinned>
        <pinned_version/>
        <stage/>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>b7d63e641b5be010e314c955624bcb80</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:45</sys_updated_on>
        <timeout>1970-01-01 00:00:00</timeout>
        <vars/>
        <width/>
        <workflow_version display_value="14 Hours">b7d63e641b5be010e314c955624bcb7c</workflow_version>
        <x>412</x>
        <y>296</y>
    </wf_activity>
    <sys_variable_value action="delete_multiple" query="document_key=b7d63e641b5be010e314c955624bcb80"/>
    <wf_condition action="INSERT_OR_UPDATE">
        <activity display_value="getF5Certificates">b7d63e641b5be010e314c955624bcb80</activity>
        <condition/>
        <condition_default display_value="Failure">4ed192b4db8e73844ff2c553059619a4</condition_default>
        <condition_type>standard</condition_type>
        <else_flag>true</else_flag>
        <error>false</error>
        <event>false</event>
        <event_name/>
        <is_positive>false</is_positive>
        <name>Failure</name>
        <order>200</order>
        <short_description/>
        <skip_during_generate>false</skip_during_generate>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>73d63e641b5be010e314c955624bcb81</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:45</sys_updated_on>
    </wf_condition>
    <wf_condition action="INSERT_OR_UPDATE">
        <activity display_value="getF5Certificates">b7d63e641b5be010e314c955624bcb80</activity>
        <condition>activityOutput.result == "success"</condition>
        <condition_default display_value="Success">6bdaf9f4db4a73844ff2c5530596190a</condition_default>
        <condition_type>standard</condition_type>
        <else_flag>false</else_flag>
        <error>false</error>
        <event>false</event>
        <event_name/>
        <is_positive>false</is_positive>
        <name>Success</name>
        <order>100</order>
        <short_description/>
        <skip_during_generate>false</skip_during_generate>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>f3d63e641b5be010e314c955624bcb81</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:45</sys_updated_on>
    </wf_condition>
    <wf_activity action="INSERT_OR_UPDATE">
        <activity_definition display_value="Run Script">db8c65aec0a8016501d00259bc7203a4</activity_definition>
        <activity_definition_updated>false</activity_definition_updated>
        <databus_lookup_id>3</databus_lookup_id>
        <height/>
        <input>{}</input>
        <is_parent>false</is_parent>
        <name>Initialize Workflow Variables</name>
        <new_activity_definition/>
        <notes/>
        <out_of_date>false</out_of_date>
        <parent/>
        <pinned>false</pinned>
        <pinned_version/>
        <stage/>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>7bd63e641b5be010e314c955624bcb7e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:45</sys_updated_on>
        <timeout>1970-01-01 00:00:00</timeout>
        <vars/>
        <width/>
        <workflow_version display_value="14 Hours">b7d63e641b5be010e314c955624bcb7c</workflow_version>
        <x>159</x>
        <y>118</y>
    </wf_activity>
    <sys_variable_value action="delete_multiple" query="document_key=7bd63e641b5be010e314c955624bcb7e"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>wf_activity</document>
        <document_key>7bd63e641b5be010e314c955624bcb7e</document_key>
        <order>1</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>ffd63e641b5be010e314c955624bcb7e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:45</sys_updated_on>
        <value>workflow.scratchpad.errorOccured = false;&#13;
&#13;
//Get the credentials&#13;
var credentialRecord = new GlideRecord('discovery_credentials');&#13;
&#13;
credentialRecord.addQuery('name','F5 Certificate Discovery');&#13;
credentialRecord.query();&#13;
if(credentialRecord.next()){&#13;
	workflow.scratchpad.f5UserId = ((credentialRecord.user_name).split('\\'))[1];&#13;
	workflow.scratchpad.f5UserPassword = credentialRecord.password;&#13;
}&#13;
workflow.scratchpad.currentF5Host = current.u_f5_host.name;&#13;
workflow.scratchpad.currentF5SysId = current.u_f5_host.sys_id;&#13;
&#13;
workflow.scratchpad.ignoreExpiredDays = parseInt(gs.getProperty('x_unugr_certificat.importscan.ignoreExpiredDays'));&#13;
&#13;
</value>
        <variable display_value="">c35ddef20a0a0ba96248a7090eccd518</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>wf_activity</document>
        <document_key>7bd63e641b5be010e314c955624bcb7e</document_key>
        <order>1</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>ffd63e641b5be010e314c955624bcb7e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:45</sys_updated_on>
        <value>workflow.scratchpad.errorOccured = false;&#13;
&#13;
//Get the credentials&#13;
var credentialRecord = new GlideRecord('discovery_credentials');&#13;
&#13;
credentialRecord.addQuery('name','F5 Certificate Discovery');&#13;
credentialRecord.query();&#13;
if(credentialRecord.next()){&#13;
	workflow.scratchpad.f5UserId = ((credentialRecord.user_name).split('\\'))[1];&#13;
	workflow.scratchpad.f5UserPassword = credentialRecord.password;&#13;
}&#13;
workflow.scratchpad.currentF5Host = current.u_f5_host.name;&#13;
workflow.scratchpad.currentF5SysId = current.u_f5_host.sys_id;&#13;
&#13;
workflow.scratchpad.ignoreExpiredDays = parseInt(gs.getProperty('x_unugr_certificat.importscan.ignoreExpiredDays'));&#13;
&#13;
</value>
        <variable display_value="">c35ddef20a0a0ba96248a7090eccd518</variable>
    </sys_variable_value>
    <wf_condition action="INSERT_OR_UPDATE">
        <activity display_value="Initialize Workflow Variables">7bd63e641b5be010e314c955624bcb7e</activity>
        <condition>true</condition>
        <condition_default/>
        <condition_type>standard</condition_type>
        <else_flag>false</else_flag>
        <error>false</error>
        <event>false</event>
        <event_name/>
        <is_positive>true</is_positive>
        <name>Always</name>
        <order>0</order>
        <short_description/>
        <skip_during_generate>false</skip_during_generate>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>3fd63e641b5be010e314c955624bcb7f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:45</sys_updated_on>
    </wf_condition>
    <wf_activity action="INSERT_OR_UPDATE">
        <activity_definition display_value="Run Script">db8c65aec0a8016501d00259bc7203a4</activity_definition>
        <activity_definition_updated>false</activity_definition_updated>
        <databus_lookup_id>6</databus_lookup_id>
        <height/>
        <input>{}</input>
        <is_parent>false</is_parent>
        <name>Log Failure</name>
        <new_activity_definition/>
        <notes/>
        <out_of_date>false</out_of_date>
        <parent/>
        <pinned>false</pinned>
        <pinned_version/>
        <stage/>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>77d63e641b5be010e314c955624bcb82</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <timeout>1970-01-01 00:00:00</timeout>
        <vars/>
        <width/>
        <workflow_version display_value="14 Hours">b7d63e641b5be010e314c955624bcb7c</workflow_version>
        <x>505</x>
        <y>516</y>
    </wf_activity>
    <sys_variable_value action="delete_multiple" query="document_key=77d63e641b5be010e314c955624bcb82"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>wf_activity</document>
        <document_key>77d63e641b5be010e314c955624bcb82</document_key>
        <order>1</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>7bd6faa41b5be010e314c955624bcbf5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <value>var errorMessage = '';&#13;
&#13;
workflow.scratchpad.errorsOccured = true;&#13;
&#13;
errorMessage ='Error Processing F5 Certificates from host ' + workflow.scratchpad.currentF5Host + ' Error: ' + data.get(4).errorMessage;&#13;
current.u_status = 'Failure';&#13;
current.u_status_description = errorMessage;&#13;
current.u_scan_ended = new GlideDateTime();&#13;
&#13;
//write Error to application log also&#13;
gs.info(errorMessage);</value>
        <variable display_value="">c35ddef20a0a0ba96248a7090eccd518</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>wf_activity</document>
        <document_key>77d63e641b5be010e314c955624bcb82</document_key>
        <order>1</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>7bd6faa41b5be010e314c955624bcbf5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <value>var errorMessage = '';&#13;
&#13;
workflow.scratchpad.errorsOccured = true;&#13;
&#13;
errorMessage ='Error Processing F5 Certificates from host ' + workflow.scratchpad.currentF5Host + ' Error: ' + data.get(4).errorMessage;&#13;
current.u_status = 'Failure';&#13;
current.u_status_description = errorMessage;&#13;
current.u_scan_ended = new GlideDateTime();&#13;
&#13;
//write Error to application log also&#13;
gs.info(errorMessage);</value>
        <variable display_value="">c35ddef20a0a0ba96248a7090eccd518</variable>
    </sys_variable_value>
    <wf_condition action="INSERT_OR_UPDATE">
        <activity display_value="Log Failure">77d63e641b5be010e314c955624bcb82</activity>
        <condition>true</condition>
        <condition_default/>
        <condition_type>standard</condition_type>
        <else_flag>false</else_flag>
        <error>false</error>
        <event>false</event>
        <event_name/>
        <is_positive>true</is_positive>
        <name>Always</name>
        <order>0</order>
        <short_description/>
        <skip_during_generate>false</skip_during_generate>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>bfd6faa41b5be010e314c955624bcbf5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
    </wf_condition>
    <wf_activity action="INSERT_OR_UPDATE">
        <activity_definition display_value="Run Script">db8c65aec0a8016501d00259bc7203a4</activity_definition>
        <activity_definition_updated>false</activity_definition_updated>
        <databus_lookup_id>5</databus_lookup_id>
        <height/>
        <input>{}</input>
        <is_parent>false</is_parent>
        <name>ProcessCertificateResults</name>
        <new_activity_definition/>
        <notes/>
        <out_of_date>false</out_of_date>
        <parent/>
        <pinned>false</pinned>
        <pinned_version/>
        <stage/>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>f3d6faa41b5be010e314c955624bcbf7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <timeout>1970-01-01 00:00:00</timeout>
        <vars/>
        <width/>
        <workflow_version display_value="14 Hours">b7d63e641b5be010e314c955624bcb7c</workflow_version>
        <x>729</x>
        <y>385</y>
    </wf_activity>
    <sys_variable_value action="delete_multiple" query="document_key=f3d6faa41b5be010e314c955624bcbf7"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>wf_activity</document>
        <document_key>f3d6faa41b5be010e314c955624bcbf7</document_key>
        <order>1</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>77d6faa41b5be010e314c955624bcbf7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <value>var f5CertificatesCount = 0;&#13;
var statusDescription = '';&#13;
var errorMessage = '';&#13;
var errorOccured = false;&#13;
var processStatus = 'Success';&#13;
var debugOutput = true;&#13;
var certUpdated = 0;&#13;
var relationshipUpdated = 0;&#13;
var certInserted = 0;&#13;
var relationshipInserted = 0;&#13;
var cimissing = 0;&#13;
var recordsIgnored = 0;&#13;
var scanSource = 'F5';&#13;
var vendorSource = 'Corporation Service Company';&#13;
var currentF5SysId = workflow.scratchpad.currentF5SysId;&#13;
var currentF5Host = workflow.scratchpad.currentF5Host;&#13;
var status;&#13;
&#13;
&#13;
&#13;
try {&#13;
	var jsonData = data.get(4).f5Certificates;&#13;
&#13;
// 	var parser = new global.JSONParser();&#13;
&#13;
// 	var parsedData = parser.parse(jsonData);&#13;
&#13;
	var parsedData = JSON.parse(jsonData);&#13;
	&#13;
	// workflow.scratchpad.jsonStringData = JSON.stringify(parsedData);&#13;
&#13;
	var f5Certificates = parsedData.f5Certificates;&#13;
	f5CertificatesCount = f5Certificates.length;&#13;
&#13;
	if(debugOutput){&#13;
		workflow.info('Number of F5 Certificates on host ' + current.u_f5_host + ': ' + f5CertificatesCount);&#13;
	}&#13;
	&#13;
	//Loop through all F5 Host Certs&#13;
	for(i=0;i &lt; f5Certificates.length;i++){&#13;
		var certificateType = f5Certificates[i].CertificateType;&#13;
		var validTo = f5Certificates[i].ExpirationDateGMT;&#13;
		var expirationDateExact = f5Certificates[i].ExpirationDateExact;&#13;
		var keyType = f5Certificates[i].KeyType;&#13;
		var bitLength = f5Certificates[i].BitLength;&#13;
		var serialNumber = f5Certificates[i].SerialNumber;&#13;
		var subjectCommonName = f5Certificates[i].SubjectCommonName;&#13;
		var subjectOrganizationName = f5Certificates[i].SubjectOrganization;&#13;
		var issuerCommonName = f5Certificates[i].IssuerCommonName;&#13;
		var issuerOrganizationName = f5Certificates[i].IssuerOrganization;&#13;
		var SANs = f5Certificates[i].SANs;&#13;
		&#13;
		//lookup certificate based on Serial Number&#13;
		//First See if we can find the certificate by serial number&#13;
		var currentCertificateSysID = "";&#13;
		currentCertificateSysID = certificateLookupBySerialNumber(serialNumber);&#13;
&#13;
		//if certificate isnt found see if we can make a match based on commonname, validFrom and validTo&#13;
		//current external ssl vendor does not supply the actual serial number of the certificate so we need to&#13;
		//try and find a match.  If we make the match update the current record with the actual serial number&#13;
		&#13;
		if(currentCertificateSysID === '' &amp;&amp; issuerOrganizationName == vendorSource) {&#13;
			currentCertificateSysID = certificateVendorLookupByCommonName(subjectCommonName,validTo);&#13;
			//if we found it see if we need to update any other data on the record, since the vendor supplies&#13;
			//very little data&#13;
			if(currentCertificateSysID !== ""){&#13;
				checkUpdateVendorCertificate(currentCertificateSysID,serialNumber,SANs,subjectOrganizationName);			&#13;
			}&#13;
		}else if (currentCertificateSysID == '' &amp;&amp; issuerOrganizationName != vendorSource){&#13;
			//Certificate not found and is not from our External Vendor and its expiration Date was not less than the ignoreExpired days ago then Add to Cert Repository&#13;
			certificateRecord = new GlideRecord('x_unugr_certificat_digital_certificate');&#13;
			certificateRecord.initialize();&#13;
			&#13;
			certificateRecord.u_subject = subjectOrganizationName;&#13;
			certificateRecord.u_source = scanSource;&#13;
			certificateRecord.u_serial_number = serialNumber;&#13;
			certificateRecord.u_sans = SANs;&#13;
			certificateRecord.u_issuer = issuerOrganizationName;&#13;
			certificateRecord.u_common_name = subjectCommonName;&#13;
			certificateRecord.u_environment = findEnvironmentByCommonNameOrSans(subjectCommonName,SANs);&#13;
			certificateRecord.u_expires = convertToCommonDate(validTo);&#13;
			currentCertificateSysID = certificateRecord.insert();&#13;
			certInserted += 1;&#13;
			&#13;
		}	&#13;
&#13;
		//now that we have either found or inserted the certificate we will either update an existing relationship to a load balancer or create a relationship&#13;
		if(currentCertificateSysID != '' ){&#13;
			//first see if the relationship already exists, if it does update the last found date&#13;
			//if it doesnt then add it&#13;
// 			workflow.info('Relationship loadbalacer ' + currentF5SysId + ' Certificate ' + currentCertificateSysID);&#13;
			var queryString = 'load_balancer=' + currentF5SysId + '^digital_certificate=' + currentCertificateSysID; &#13;
			var relationshipRecord =  new GlideRecord('x_unugr_certificat_m2m_load_balance_digital_cert');&#13;
			relationshipRecord.addEncodedQuery(queryString);&#13;
			relationshipRecord.query();&#13;
			&#13;
			if(relationshipRecord.next()){&#13;
				relationshipRecord.u_last_found = new GlideDateTime();&#13;
				relationshipRecord.update();&#13;
				relationshipUpdated += 1;&#13;
			} else {&#13;
				relationshipRecord.initialize();&#13;
				relationshipRecord.digital_certificate = currentCertificateSysID;&#13;
				relationshipRecord.load_balancer = currentF5SysId;&#13;
				relationshipRecord.u_first_found = new GlideDateTime();&#13;
				relationshipRecord.insert();&#13;
				relationshipInserted += 1;				&#13;
			}&#13;
		} else{&#13;
			recordsIgnored += 1;&#13;
		}		&#13;
		&#13;
		&#13;
	}&#13;
	&#13;
} catch(e) {&#13;
	errorOccured = true;&#13;
	processStatus = 'Failure';&#13;
	if(/null/.test(e.message)){//Error Message is null&#13;
		errorMessage = 'Error Occured while parsing F5 scan data for host: ' + currentF5Host + ' Last processed subjectCommonName: ' + subjectCommonName;&#13;
		gs.info('Error Occured while parsing parsing F5 scan data for host: ' + currentF5Host + ' Error Stack: ' + e.stack);&#13;
	} else {&#13;
		errorMessage = 'Error Occured while parsing parsing F5 scan data for host: ' + currentF5Host + ' Last processed subjectCommonName: ' + subjectCommonName + 'Reason: ' + e.message;&#13;
		gs.info(errorMessage);&#13;
		gs.info('Error Occured while parsing parsing F5 scan data for host: ' + currentF5Host + ' Error Stack: ' + e.stack);&#13;
	}&#13;
} finally {&#13;
	var statusDescription = '';&#13;
	//if error occured then log the error to the F5 Table&#13;
	if(errorOccured) {&#13;
		processStatus = 'Failure';&#13;
		statusDescription = errorMessage;&#13;
	} else {&#13;
		processStatus = 'Success';&#13;
		statusDescription = f5CertificatesCount + ' Certificates Were Successfully Scanned: Relationships Inserted = ' + relationshipInserted + ' Updated = ' + relationshipUpdated + ' Ignored = ' + recordsIgnored + ' Certificates Inserted = ' + certInserted + ' Certificates Update = ' + certUpdated;&#13;
	}&#13;
	&#13;
	current.u_scan_ended =  new GlideDateTime();&#13;
	current.u_status = processStatus;&#13;
	current.u_status_description = statusDescription;&#13;
&#13;
	&#13;
	&#13;
&#13;
}&#13;
&#13;
function certificateLookupBySerialNumber(serialNumber){&#13;
	var foundSysId = "";&#13;
	&#13;
	try {&#13;
		&#13;
		var certificateLookupRecord = new GlideRecord('x_unugr_certificat_digital_certificate');&#13;
		certificateLookupRecord.addQuery('u_serial_number','=',serialNumber);&#13;
		certificateLookupRecord.query();&#13;
		&#13;
		if(certificateLookupRecord.getRowCount() != 0){&#13;
			while(certificateLookupRecord.next()){&#13;
				foundSysId = certificateLookupRecord.sys_id;&#13;
			}&#13;
		}&#13;
		&#13;
		&#13;
	}catch(e){&#13;
		throw(e);&#13;
	}&#13;
	return foundSysId;	&#13;
}&#13;
&#13;
function certificateVendorLookupByCommonName(subjectCommonName,validTo){&#13;
	var foundSysId = "";&#13;
	&#13;
	try {&#13;
		&#13;
		var dateTo = convertToCommonDate(validTo);&#13;
		&#13;
		var certificateLookupRecord = new GlideRecord('x_unugr_certificat_digital_certificate');&#13;
		var encodedQuery = "u_common_name=" + subjectCommonName + "^u_expiresON" + dateTo + "@javascript:gs.dateGenerate('" + dateTo + "','start')@javascript:gs.dateGenerate('" + dateTo + "','end')";&#13;
		&#13;
		certificateLookupRecord.addEncodedQuery(encodedQuery);&#13;
		certificateLookupRecord.query();&#13;
		&#13;
// 		workflow.info(subjectCommonName + ' before ' + validTo + ' after ' + dateTo);&#13;
// 		workflow.info(encodedQuery);&#13;
		if(certificateLookupRecord.getRowCount() != 0){&#13;
			while(certificateLookupRecord.next()){&#13;
				foundSysId = certificateLookupRecord.sys_id;&#13;
			}&#13;
		}&#13;
		&#13;
	}catch(e){&#13;
		throw(e);&#13;
	}&#13;
	return foundSysId;	&#13;
	&#13;
}&#13;
&#13;
function getMonthFromString(mon,year){&#13;
   return new Date(Date.parse(mon +" 1, " + year)).getMonth()+1;&#13;
}&#13;
&#13;
function convertToCommonDate(dateTestString){&#13;
    var dateArray = dateTestString.split(' ');&#13;
    var yearStr = dateArray[3];&#13;
    var dayStr = dateArray[1];&#13;
    var monStr = getMonthFromString(dateArray[0],yearStr);&#13;
    var timeStr = dateArray[2];&#13;
    &#13;
    var dateString = monStr + '/' + dayStr + '/' + yearStr + ' ' + timeStr + ' GMT';&#13;
	&#13;
	if(debugOutput){&#13;
		gs.info('Convert to Common Date string: ' + dateString);&#13;
	}   &#13;
	&#13;
    var date = new Date(dateString);&#13;
    &#13;
    return formatDate(date);&#13;
}&#13;
&#13;
function formatDate(date) {&#13;
    var d = new Date(date),&#13;
        month = '' + (d.getMonth() + 1),&#13;
        day = '' + d.getDate(),&#13;
        year = d.getFullYear();&#13;
&#13;
    if (month.length &lt; 2) month = '0' + month;&#13;
    if (day.length &lt; 2) day = '0' + day;&#13;
&#13;
    return [year, month, day].join('-');&#13;
}&#13;
&#13;
function findEnvironmentByCommonNameOrSans(subjectCommonName,SANs){&#13;
	var environment;&#13;
	var commonName = subjectCommonName.toUpperCase();&#13;
	var alternateName = SANs.toUpperCase();&#13;
	var acceptance = 'ACPT';&#13;
	var development = 'DEV';&#13;
	var production = 'CORP';&#13;
	&#13;
	if(commonName.includes('.' + development) || alternateName.includes('.' + development)  || &#13;
	  commonName.includes(' ' + development + ' ') || alternateName.includes(' ' + development + ' ') ){&#13;
		environment = 'UP.DEV.UPC';&#13;
	} else if(commonName.includes('.' + acceptance) || alternateName.includes('.' + acceptance)  || &#13;
	  commonName.includes(' ' + acceptance + ' ') || alternateName.includes(' ' + acceptance + ' ') ){&#13;
		environment = 'UP.ACPT.UPC';&#13;
	} else if(commonName.includes('.' + production) || alternateName.includes('.' + production)  || &#13;
	  commonName.includes(' ' + production + ' ') || alternateName.includes(' ' + production + ' ') ){&#13;
		environment = 'UP.CORP.UPC';&#13;
	} else{&#13;
		environment = '';&#13;
	}&#13;
	&#13;
	return environment;&#13;
}&#13;
&#13;
function calcDaysDiffFromToday(dateString){&#13;
	var todayDate = new GlideDateTime();&#13;
	var compareDate = new GlideDateTime(dateString);&#13;
	var duration = GlideDate.subtract(todayDate,compareDate);&#13;
	var diffDays = duration.getRoundedDayPart();&#13;
&#13;
	if(debugOutput){&#13;
		gs.info('Date is ' + dateString + ' Converted Date is: ' + compareDate + ' Days Diff is: ' + diffDays);&#13;
	}&#13;
	return diffDays;&#13;
}&#13;
&#13;
function checkUpdateVendorCertificate(currentCertificateSysID,serialNumber,SANs,subjectOrganizationName){&#13;
	var doUpdate = false;&#13;
	try {&#13;
		&#13;
		var certificateLookupRecord = new GlideRecord('x_unugr_certificat_digital_certificate');&#13;
		certificateLookupRecord.addQuery('sys_id','=',currentCertificateSysID);&#13;
		certificateLookupRecord.query();&#13;
		&#13;
		if(certificateLookupRecord.getRowCount() != 0){&#13;
			while(certificateLookupRecord.next()){&#13;
				if(certificateLookupRecord.u_serial_number == ''){&#13;
					certificateLookupRecord.u_serial_number = serialNumber;&#13;
					doUpdate = true;&#13;
				}&#13;
				if(certificateLookupRecord.u_sans == ''){&#13;
					certificateLookupRecord.u_sans = SANs;&#13;
					doUpdate = true;&#13;
				}				&#13;
				if(certificateLookupRecord.u_subject == ''){&#13;
					certificateLookupRecord.u_subject = subjectOrganizationName;&#13;
					doUpdate = true;&#13;
				}							&#13;
				&#13;
				if(doUpdate){&#13;
					certificateLookupRecord.update();&#13;
					certUpdated += 1;&#13;
				}&#13;
			}&#13;
		}&#13;
		&#13;
		&#13;
	}catch(e){&#13;
		throw(e);&#13;
	}	&#13;
}</value>
        <variable display_value="">c35ddef20a0a0ba96248a7090eccd518</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>wf_activity</document>
        <document_key>f3d6faa41b5be010e314c955624bcbf7</document_key>
        <order>1</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>77d6faa41b5be010e314c955624bcbf7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <value>var f5CertificatesCount = 0;&#13;
var statusDescription = '';&#13;
var errorMessage = '';&#13;
var errorOccured = false;&#13;
var processStatus = 'Success';&#13;
var debugOutput = true;&#13;
var certUpdated = 0;&#13;
var relationshipUpdated = 0;&#13;
var certInserted = 0;&#13;
var relationshipInserted = 0;&#13;
var cimissing = 0;&#13;
var recordsIgnored = 0;&#13;
var scanSource = 'F5';&#13;
var vendorSource = 'Corporation Service Company';&#13;
var currentF5SysId = workflow.scratchpad.currentF5SysId;&#13;
var currentF5Host = workflow.scratchpad.currentF5Host;&#13;
var status;&#13;
&#13;
&#13;
&#13;
try {&#13;
	var jsonData = data.get(4).f5Certificates;&#13;
&#13;
// 	var parser = new global.JSONParser();&#13;
&#13;
// 	var parsedData = parser.parse(jsonData);&#13;
&#13;
	var parsedData = JSON.parse(jsonData);&#13;
	&#13;
	// workflow.scratchpad.jsonStringData = JSON.stringify(parsedData);&#13;
&#13;
	var f5Certificates = parsedData.f5Certificates;&#13;
	f5CertificatesCount = f5Certificates.length;&#13;
&#13;
	if(debugOutput){&#13;
		workflow.info('Number of F5 Certificates on host ' + current.u_f5_host + ': ' + f5CertificatesCount);&#13;
	}&#13;
	&#13;
	//Loop through all F5 Host Certs&#13;
	for(i=0;i &lt; f5Certificates.length;i++){&#13;
		var certificateType = f5Certificates[i].CertificateType;&#13;
		var validTo = f5Certificates[i].ExpirationDateGMT;&#13;
		var expirationDateExact = f5Certificates[i].ExpirationDateExact;&#13;
		var keyType = f5Certificates[i].KeyType;&#13;
		var bitLength = f5Certificates[i].BitLength;&#13;
		var serialNumber = f5Certificates[i].SerialNumber;&#13;
		var subjectCommonName = f5Certificates[i].SubjectCommonName;&#13;
		var subjectOrganizationName = f5Certificates[i].SubjectOrganization;&#13;
		var issuerCommonName = f5Certificates[i].IssuerCommonName;&#13;
		var issuerOrganizationName = f5Certificates[i].IssuerOrganization;&#13;
		var SANs = f5Certificates[i].SANs;&#13;
		&#13;
		//lookup certificate based on Serial Number&#13;
		//First See if we can find the certificate by serial number&#13;
		var currentCertificateSysID = "";&#13;
		currentCertificateSysID = certificateLookupBySerialNumber(serialNumber);&#13;
&#13;
		//if certificate isnt found see if we can make a match based on commonname, validFrom and validTo&#13;
		//current external ssl vendor does not supply the actual serial number of the certificate so we need to&#13;
		//try and find a match.  If we make the match update the current record with the actual serial number&#13;
		&#13;
		if(currentCertificateSysID === '' &amp;&amp; issuerOrganizationName == vendorSource) {&#13;
			currentCertificateSysID = certificateVendorLookupByCommonName(subjectCommonName,validTo);&#13;
			//if we found it see if we need to update any other data on the record, since the vendor supplies&#13;
			//very little data&#13;
			if(currentCertificateSysID !== ""){&#13;
				checkUpdateVendorCertificate(currentCertificateSysID,serialNumber,SANs,subjectOrganizationName);			&#13;
			}&#13;
		}else if (currentCertificateSysID == '' &amp;&amp; issuerOrganizationName != vendorSource){&#13;
			//Certificate not found and is not from our External Vendor and its expiration Date was not less than the ignoreExpired days ago then Add to Cert Repository&#13;
			certificateRecord = new GlideRecord('x_unugr_certificat_digital_certificate');&#13;
			certificateRecord.initialize();&#13;
			&#13;
			certificateRecord.u_subject = subjectOrganizationName;&#13;
			certificateRecord.u_source = scanSource;&#13;
			certificateRecord.u_serial_number = serialNumber;&#13;
			certificateRecord.u_sans = SANs;&#13;
			certificateRecord.u_issuer = issuerOrganizationName;&#13;
			certificateRecord.u_common_name = subjectCommonName;&#13;
			certificateRecord.u_environment = findEnvironmentByCommonNameOrSans(subjectCommonName,SANs);&#13;
			certificateRecord.u_expires = convertToCommonDate(validTo);&#13;
			currentCertificateSysID = certificateRecord.insert();&#13;
			certInserted += 1;&#13;
			&#13;
		}	&#13;
&#13;
		//now that we have either found or inserted the certificate we will either update an existing relationship to a load balancer or create a relationship&#13;
		if(currentCertificateSysID != '' ){&#13;
			//first see if the relationship already exists, if it does update the last found date&#13;
			//if it doesnt then add it&#13;
// 			workflow.info('Relationship loadbalacer ' + currentF5SysId + ' Certificate ' + currentCertificateSysID);&#13;
			var queryString = 'load_balancer=' + currentF5SysId + '^digital_certificate=' + currentCertificateSysID; &#13;
			var relationshipRecord =  new GlideRecord('x_unugr_certificat_m2m_load_balance_digital_cert');&#13;
			relationshipRecord.addEncodedQuery(queryString);&#13;
			relationshipRecord.query();&#13;
			&#13;
			if(relationshipRecord.next()){&#13;
				relationshipRecord.u_last_found = new GlideDateTime();&#13;
				relationshipRecord.update();&#13;
				relationshipUpdated += 1;&#13;
			} else {&#13;
				relationshipRecord.initialize();&#13;
				relationshipRecord.digital_certificate = currentCertificateSysID;&#13;
				relationshipRecord.load_balancer = currentF5SysId;&#13;
				relationshipRecord.u_first_found = new GlideDateTime();&#13;
				relationshipRecord.insert();&#13;
				relationshipInserted += 1;				&#13;
			}&#13;
		} else{&#13;
			recordsIgnored += 1;&#13;
		}		&#13;
		&#13;
		&#13;
	}&#13;
	&#13;
} catch(e) {&#13;
	errorOccured = true;&#13;
	processStatus = 'Failure';&#13;
	if(/null/.test(e.message)){//Error Message is null&#13;
		errorMessage = 'Error Occured while parsing F5 scan data for host: ' + currentF5Host + ' Last processed subjectCommonName: ' + subjectCommonName;&#13;
		gs.info('Error Occured while parsing parsing F5 scan data for host: ' + currentF5Host + ' Error Stack: ' + e.stack);&#13;
	} else {&#13;
		errorMessage = 'Error Occured while parsing parsing F5 scan data for host: ' + currentF5Host + ' Last processed subjectCommonName: ' + subjectCommonName + 'Reason: ' + e.message;&#13;
		gs.info(errorMessage);&#13;
		gs.info('Error Occured while parsing parsing F5 scan data for host: ' + currentF5Host + ' Error Stack: ' + e.stack);&#13;
	}&#13;
} finally {&#13;
	var statusDescription = '';&#13;
	//if error occured then log the error to the F5 Table&#13;
	if(errorOccured) {&#13;
		processStatus = 'Failure';&#13;
		statusDescription = errorMessage;&#13;
	} else {&#13;
		processStatus = 'Success';&#13;
		statusDescription = f5CertificatesCount + ' Certificates Were Successfully Scanned: Relationships Inserted = ' + relationshipInserted + ' Updated = ' + relationshipUpdated + ' Ignored = ' + recordsIgnored + ' Certificates Inserted = ' + certInserted + ' Certificates Update = ' + certUpdated;&#13;
	}&#13;
	&#13;
	current.u_scan_ended =  new GlideDateTime();&#13;
	current.u_status = processStatus;&#13;
	current.u_status_description = statusDescription;&#13;
&#13;
	&#13;
	&#13;
&#13;
}&#13;
&#13;
function certificateLookupBySerialNumber(serialNumber){&#13;
	var foundSysId = "";&#13;
	&#13;
	try {&#13;
		&#13;
		var certificateLookupRecord = new GlideRecord('x_unugr_certificat_digital_certificate');&#13;
		certificateLookupRecord.addQuery('u_serial_number','=',serialNumber);&#13;
		certificateLookupRecord.query();&#13;
		&#13;
		if(certificateLookupRecord.getRowCount() != 0){&#13;
			while(certificateLookupRecord.next()){&#13;
				foundSysId = certificateLookupRecord.sys_id;&#13;
			}&#13;
		}&#13;
		&#13;
		&#13;
	}catch(e){&#13;
		throw(e);&#13;
	}&#13;
	return foundSysId;	&#13;
}&#13;
&#13;
function certificateVendorLookupByCommonName(subjectCommonName,validTo){&#13;
	var foundSysId = "";&#13;
	&#13;
	try {&#13;
		&#13;
		var dateTo = convertToCommonDate(validTo);&#13;
		&#13;
		var certificateLookupRecord = new GlideRecord('x_unugr_certificat_digital_certificate');&#13;
		var encodedQuery = "u_common_name=" + subjectCommonName + "^u_expiresON" + dateTo + "@javascript:gs.dateGenerate('" + dateTo + "','start')@javascript:gs.dateGenerate('" + dateTo + "','end')";&#13;
		&#13;
		certificateLookupRecord.addEncodedQuery(encodedQuery);&#13;
		certificateLookupRecord.query();&#13;
		&#13;
// 		workflow.info(subjectCommonName + ' before ' + validTo + ' after ' + dateTo);&#13;
// 		workflow.info(encodedQuery);&#13;
		if(certificateLookupRecord.getRowCount() != 0){&#13;
			while(certificateLookupRecord.next()){&#13;
				foundSysId = certificateLookupRecord.sys_id;&#13;
			}&#13;
		}&#13;
		&#13;
	}catch(e){&#13;
		throw(e);&#13;
	}&#13;
	return foundSysId;	&#13;
	&#13;
}&#13;
&#13;
function getMonthFromString(mon,year){&#13;
   return new Date(Date.parse(mon +" 1, " + year)).getMonth()+1;&#13;
}&#13;
&#13;
function convertToCommonDate(dateTestString){&#13;
    var dateArray = dateTestString.split(' ');&#13;
    var yearStr = dateArray[3];&#13;
    var dayStr = dateArray[1];&#13;
    var monStr = getMonthFromString(dateArray[0],yearStr);&#13;
    var timeStr = dateArray[2];&#13;
    &#13;
    var dateString = monStr + '/' + dayStr + '/' + yearStr + ' ' + timeStr + ' GMT';&#13;
	&#13;
	if(debugOutput){&#13;
		gs.info('Convert to Common Date string: ' + dateString);&#13;
	}   &#13;
	&#13;
    var date = new Date(dateString);&#13;
    &#13;
    return formatDate(date);&#13;
}&#13;
&#13;
function formatDate(date) {&#13;
    var d = new Date(date),&#13;
        month = '' + (d.getMonth() + 1),&#13;
        day = '' + d.getDate(),&#13;
        year = d.getFullYear();&#13;
&#13;
    if (month.length &lt; 2) month = '0' + month;&#13;
    if (day.length &lt; 2) day = '0' + day;&#13;
&#13;
    return [year, month, day].join('-');&#13;
}&#13;
&#13;
function findEnvironmentByCommonNameOrSans(subjectCommonName,SANs){&#13;
	var environment;&#13;
	var commonName = subjectCommonName.toUpperCase();&#13;
	var alternateName = SANs.toUpperCase();&#13;
	var acceptance = 'ACPT';&#13;
	var development = 'DEV';&#13;
	var production = 'CORP';&#13;
	&#13;
	if(commonName.includes('.' + development) || alternateName.includes('.' + development)  || &#13;
	  commonName.includes(' ' + development + ' ') || alternateName.includes(' ' + development + ' ') ){&#13;
		environment = 'UP.DEV.UPC';&#13;
	} else if(commonName.includes('.' + acceptance) || alternateName.includes('.' + acceptance)  || &#13;
	  commonName.includes(' ' + acceptance + ' ') || alternateName.includes(' ' + acceptance + ' ') ){&#13;
		environment = 'UP.ACPT.UPC';&#13;
	} else if(commonName.includes('.' + production) || alternateName.includes('.' + production)  || &#13;
	  commonName.includes(' ' + production + ' ') || alternateName.includes(' ' + production + ' ') ){&#13;
		environment = 'UP.CORP.UPC';&#13;
	} else{&#13;
		environment = '';&#13;
	}&#13;
	&#13;
	return environment;&#13;
}&#13;
&#13;
function calcDaysDiffFromToday(dateString){&#13;
	var todayDate = new GlideDateTime();&#13;
	var compareDate = new GlideDateTime(dateString);&#13;
	var duration = GlideDate.subtract(todayDate,compareDate);&#13;
	var diffDays = duration.getRoundedDayPart();&#13;
&#13;
	if(debugOutput){&#13;
		gs.info('Date is ' + dateString + ' Converted Date is: ' + compareDate + ' Days Diff is: ' + diffDays);&#13;
	}&#13;
	return diffDays;&#13;
}&#13;
&#13;
function checkUpdateVendorCertificate(currentCertificateSysID,serialNumber,SANs,subjectOrganizationName){&#13;
	var doUpdate = false;&#13;
	try {&#13;
		&#13;
		var certificateLookupRecord = new GlideRecord('x_unugr_certificat_digital_certificate');&#13;
		certificateLookupRecord.addQuery('sys_id','=',currentCertificateSysID);&#13;
		certificateLookupRecord.query();&#13;
		&#13;
		if(certificateLookupRecord.getRowCount() != 0){&#13;
			while(certificateLookupRecord.next()){&#13;
				if(certificateLookupRecord.u_serial_number == ''){&#13;
					certificateLookupRecord.u_serial_number = serialNumber;&#13;
					doUpdate = true;&#13;
				}&#13;
				if(certificateLookupRecord.u_sans == ''){&#13;
					certificateLookupRecord.u_sans = SANs;&#13;
					doUpdate = true;&#13;
				}				&#13;
				if(certificateLookupRecord.u_subject == ''){&#13;
					certificateLookupRecord.u_subject = subjectOrganizationName;&#13;
					doUpdate = true;&#13;
				}							&#13;
				&#13;
				if(doUpdate){&#13;
					certificateLookupRecord.update();&#13;
					certUpdated += 1;&#13;
				}&#13;
			}&#13;
		}&#13;
		&#13;
		&#13;
	}catch(e){&#13;
		throw(e);&#13;
	}	&#13;
}</value>
        <variable display_value="">c35ddef20a0a0ba96248a7090eccd518</variable>
    </sys_variable_value>
    <wf_condition action="INSERT_OR_UPDATE">
        <activity display_value="ProcessCertificateResults">f3d6faa41b5be010e314c955624bcbf7</activity>
        <condition>true</condition>
        <condition_default/>
        <condition_type>standard</condition_type>
        <else_flag>false</else_flag>
        <error>false</error>
        <event>false</event>
        <event_name/>
        <is_positive>true</is_positive>
        <name>Always</name>
        <order>0</order>
        <short_description/>
        <skip_during_generate>false</skip_during_generate>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>bbd6faa41b5be010e314c955624bcbf7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
    </wf_condition>
    <wf_transition action="INSERT_OR_UPDATE">
        <condition display_value="Always">bbd6faa41b5be010e314c955624bcbf7</condition>
        <from display_value="ProcessCertificateResults">f3d6faa41b5be010e314c955624bcbf7</from>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>37d6faa41b5be010e314c955624bcbfa</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <to display_value="End">7bd63e641b5be010e314c955624bcb81</to>
    </wf_transition>
    <wf_transition action="INSERT_OR_UPDATE">
        <condition display_value="Failure">73d63e641b5be010e314c955624bcb81</condition>
        <from display_value="getF5Certificates">b7d63e641b5be010e314c955624bcb80</from>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>73d6faa41b5be010e314c955624bcbf9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <to display_value="Log Failure">77d63e641b5be010e314c955624bcb82</to>
    </wf_transition>
    <wf_transition action="INSERT_OR_UPDATE">
        <condition display_value="Success">f3d63e641b5be010e314c955624bcb81</condition>
        <from display_value="getF5Certificates">b7d63e641b5be010e314c955624bcb80</from>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>f3d6faa41b5be010e314c955624bcbf9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <to display_value="ProcessCertificateResults">f3d6faa41b5be010e314c955624bcbf7</to>
    </wf_transition>
    <wf_transition action="INSERT_OR_UPDATE">
        <condition display_value="Always">3fd6faa41b5be010e314c955624bcbf6</condition>
        <from display_value="Begin">37d6faa41b5be010e314c955624bcbf6</from>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>f7d6faa41b5be010e314c955624bcbf9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <to display_value="Initialize Workflow Variables">7bd63e641b5be010e314c955624bcb7e</to>
    </wf_transition>
    <wf_transition action="INSERT_OR_UPDATE">
        <condition display_value="Always">3fd63e641b5be010e314c955624bcb7f</condition>
        <from display_value="Initialize Workflow Variables">7bd63e641b5be010e314c955624bcb7e</from>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>fbd6faa41b5be010e314c955624bcbf9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <to display_value="getF5Certificates">b7d63e641b5be010e314c955624bcb80</to>
    </wf_transition>
    <wf_transition action="INSERT_OR_UPDATE">
        <condition display_value="Always">bfd6faa41b5be010e314c955624bcbf5</condition>
        <from display_value="Log Failure">77d63e641b5be010e314c955624bcb82</from>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:46</sys_created_on>
        <sys_id>ffd6faa41b5be010e314c955624bcbf9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:46</sys_updated_on>
        <to display_value="End">7bd63e641b5be010e314c955624bcb81</to>
    </wf_transition>
    <wf_estimated_runtime_config action="INSERT_OR_UPDATE">
        <estimated_run_time/>
        <no_of_data_points>1</no_of_data_points>
        <percentage_threshold_ert>20</percentage_threshold_ert>
        <sys_created_by>CHF03</sys_created_by>
        <sys_created_on>2021-03-31 19:20:45</sys_created_on>
        <sys_id>bbd63e641b5be010e314c955624bcb7c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>CHF03</sys_updated_by>
        <sys_updated_on>2021-03-31 19:20:45</sys_updated_on>
        <workflow_version display_value="14 Hours">b7d63e641b5be010e314c955624bcb7c</workflow_version>
    </wf_estimated_runtime_config>
    <wf_workflow_version action="update_multiple" query="workflow=bd950a41dbca37844ff2c553059619d0^sys_id!=b7d63e641b5be010e314c955624bcb7c">
        <published>false</published>
    </wf_workflow_version>
</record_update>
