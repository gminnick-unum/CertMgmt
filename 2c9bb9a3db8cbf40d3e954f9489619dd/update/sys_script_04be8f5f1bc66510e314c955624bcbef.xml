<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_unugr_certificat_digital_certificate</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_unugr_certificat_digital_certificate">associated_applicationsVALCHANGES^EQ<item endquery="false" field="associated_applications" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Populate Cert to App M2M table</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	var previousApps = previous.associated_applications.split(',');
	var currentApps = current.associated_applications.split(',');
	var certSys = current.sys_id.toString();

	// Delete M2M entries for Apps being removed
	for(var i = 0; i < previousApps.length; i++){
		if(currentApps.indexOf(previousApps[i]) == -1){
			var grM2M = new GlideRecord('x_unugr_certificat_m2m_unum_applica_digital_cert');
			grM2M.addQuery('digital_certificate', certSys)
			grM2M.addQuery('unum_application', previousApps[i]);
			grM2M.query();
			grM2M.deleteMultiple()
		}	
	}

	// Add new M2M entries for Apps being added
	for(var i = 0; i < currentApps.length; i++){
		if(previousApps.indexOf(currentApps[i]) == -1){
			var grM2M = new GlideRecord('x_unugr_certificat_m2m_unum_applica_digital_cert');
			grM2M.initialize();
			grM2M.setValue('digital_certificate', certSys)
			grM2M.setValue('unum_application', currentApps[i]);
			grM2M.insert();
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>ADI13</sys_created_by>
        <sys_created_on>2023-04-12 15:37:18</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>04be8f5f1bc66510e314c955624bcbef</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>Populate Cert to App M2M table</sys_name>
        <sys_overrides/>
        <sys_package display_value="Certificate Management" source="x_unugr_certificat">2c9bb9a3db8cbf40d3e954f9489619dd</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Certificate Management">2c9bb9a3db8cbf40d3e954f9489619dd</sys_scope>
        <sys_update_name>sys_script_04be8f5f1bc66510e314c955624bcbef</sys_update_name>
        <sys_updated_by>ADI13</sys_updated_by>
        <sys_updated_on>2023-04-12 15:57:31</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
